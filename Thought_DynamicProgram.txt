HJ16 购物单
check index is from 0 or 1
value <= budget, to fully use budget

dp[item][budget];

最长增序列长度
for(int i = 0; i < n; i++) {
	increase[i] = 1;
	for(int j = 0; j < i; j++) {
		if (val[j] < val[i]) {
			increase[i] = max(increase[i], increase[j] + 1);
		}
	}
}
// 从右增长
for(int i = n-1; i >= 0; i--) {
	decrease[i] = 1;
	for(int j = n-1; j > i; j--) {
		if (val[j] < val[i]) {
			decrease[i] = max(decrease[i], decrease[j] + 1);
		}
	}
}
放苹果
dp[n][m]	n个盘子 放m个苹果
dp[i][j] 	i个盘子 放j个苹果
if (n == 1) return 1;
if (m <= 1) return 1;
if (m <= n) return n = m;
vector<vector<int>> dp(n+1, vector<int>(m+1, 0));
dp[1] = vector<int>(m+1, 1);
for (i = 1...n) dp[i][0] = dp[i][1] = 1;
for (i = 2...n)
	for (j = 2...m) {
		if (j < i) {	// Apple is less than plate
			dp[i][j] = dp[i-1][j];
		}
		else {	// Apple is more than plate
			dp[i][j] = dp[i-1][j] + dp[i][j-i];	
					// No use new plate +  
					// use new plate, every plate has at least one apple
		}
	}
cout << dp[n][m];
