char ch = 'a'; 
char arr[] = "I am an array of characters";		// \0 is at the end of array, for every array
char arr[] = {'C', 'h', 'a', 'r'};
string str = "string";									// string embedded a \0 in string

// char array to string
	string str(arr);
	str = arr;
	
// string to char array
	char arr[1024];
	strcpy(arr, str.c_str());


// ==
	vector<char> temp;
	if (str[i] == '{')

int N = str.length();
for (int i = 0; i < N; i++) {
	cout<< str[i]<< " ";
}

// String add char
	string.push_back(char);

// Split String
int start = 0;
int end = str.find(':');
while (end != -string::npos) {
	string str1 = str.substr(start, end - start);
	start = end + 1;
	end = s.find(':', start);
}

// String to Int
std::string::size_type sz;     // alias of size_t

int i_dec = std::stoi (str_dec,&sz);
int i_hex = std::stoi (str_hex,nullptr,16);
int i_bin = std::stoi (str_bin,nullptr,2);

float f_dec = std::stof (str, &sz);
float f_dec2 = std::stof (str.substr(sz));





switch (c) {
	case '(':	break;
	case '[':	break;
	default: ;
}