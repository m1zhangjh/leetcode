#include <bits/stdc++.h>
using namespace std;
 
int main() {
    int a, b;
    while (cin >> a >> b) {
        cout << a + b << endl;
    }
}

std::string line;
while (std::getline(std::cin, line))
{
    std::cout << line << std::endl;
}

while(cin >> str) {
	cout << str;
}

#include <iostream>
#include <iomanip>
    std::cout << std::fixed;
    std::cout << std::setprecision(2);
    std::cout << d;


Initialization:
vector<int> test{1, 2, 3};

struct TreeNode {
	int val;
	TreeNode* left;
	TreeNode* right;
	TreeNode() : val(0), left(NULL), right(NULL) {}
	TreeNode(int x) : val(x), left(NULL), right(NULL) {}
	TreeNode(int x, TreeNode* lï¼Œ TreeNode* r) : val(x), left(l), right(r) {}
};
TreeNode* node = new TreeNode(0);


#include <sstream>      // std::stringstream
string line, str;
while (getline(cin, line, '\n')) {
	replace(line.begin(), line.end(), '[', ' ');
	replace(line.begin(), line.end(), ',', ' ');
	stringstream ss(line) 
	while (getline(ss, str, ' ' )) {
		if (!str.empty()) {
			int i = stoi(str.c_str());		// atof, atod, stol
			cout << i << " ";
		}
	}
}


    int x = 0;
    vector<vector<int>> vec;
    vector<int> v;
    while(cin >> x){
        v.push_back(x);
        if(cin.get() == '\n'){
            vec.push_back(v);
            v.clear();
        }
        if(cin.peek() == '\n'){
            vec.push_back(v);
            break;
        }
    }