/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        // Check whether two lists are empty or not
        if (l1 == NULL)
            return l2;
        else if (l2 == NULL)
            return l1;
        
        // Set the head node
        ListNode* res;        
        if (l1->val < l2->val) {
            res = l1;
            l1 = l1->next;
        }
        else {
            res = l2;
            l2 = l2->next;
        }
        
        // Iteratively go through two list
        ListNode* it = res;
        while (l1 != NULL || l2 != NULL) {
            if (l1 == NULL) {
                it->next = l2;
                l2 = l2->next;
            }
            else if (l2 == NULL) {
                it->next = l1;
                l1 = l1->next;
            }
            else if (l1->val < l2->val) {
                it->next = l1;
                l1 = l1->next;
            }
            else {
                it->next = l2;
                l2 = l2->next;                
            } 
            it = it->next;
        }
        
        return res;
    }
};